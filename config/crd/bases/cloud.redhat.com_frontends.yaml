
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: frontends.cloud.redhat.com
spec:
  group: cloud.redhat.com
  names:
    kind: Frontend
    listKind: FrontendList
    plural: frontends
    singular: frontend
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Frontend is the Schema for the frontends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FrontendSpec defines the desired state of Frontend
            properties:
              API:
                properties:
                  versions:
                    items:
                      type: string
                    type: array
                required:
                - versions
                type: object
              deploymentRepo:
                type: string
              envName:
                description: Foo is an example field of Frontend. Edit frontend_types.go
                  to remove/update
                type: string
              frontend:
                properties:
                  paths:
                    items:
                      type: string
                    type: array
                required:
                - paths
                type: object
              image:
                type: string
              module:
                properties:
                  manifestLocation:
                    type: string
                  moduleID:
                    type: string
                  modules:
                    items:
                      properties:
                        id:
                          type: string
                        module:
                          type: string
                        routes:
                          items:
                            properties:
                              dynamic:
                                type: boolean
                              exact:
                                type: boolean
                              pathname:
                                type: string
                            required:
                            - pathname
                            type: object
                          type: array
                      required:
                      - id
                      - module
                      - routes
                      type: object
                    type: array
                required:
                - manifestLocation
                type: object
              navItems:
                items:
                  properties:
                    appId:
                      type: string
                    dynamicNav:
                      type: string
                    expandable:
                      type: boolean
                    filterable:
                      type: boolean
                    groupId:
                      type: string
                    href:
                      type: string
                    isExternal:
                      type: boolean
                    navItems:
                      items:
                        properties:
                          appId:
                            type: string
                          filterable:
                            type: boolean
                          groupId:
                            type: string
                          href:
                            type: string
                          isExternal:
                            type: boolean
                          permissions:
                            items:
                              properties:
                                args:
                                  items:
                                    items:
                                      type: string
                                    type: array
                                  type: array
                                method:
                                  type: string
                              required:
                              - args
                              - method
                              type: object
                            type: array
                          product:
                            type: string
                          title:
                            type: string
                        required:
                        - title
                        type: object
                      type: array
                    permissions:
                      items:
                        properties:
                          args:
                            items:
                              items:
                                type: string
                              type: array
                            type: array
                          method:
                            type: string
                        required:
                        - args
                        - method
                        type: object
                      type: array
                    product:
                      type: string
                    routes:
                      items:
                        properties:
                          appId:
                            type: string
                          filterable:
                            type: boolean
                          groupId:
                            type: string
                          href:
                            type: string
                          isExternal:
                            type: boolean
                          permissions:
                            items:
                              properties:
                                args:
                                  items:
                                    items:
                                      type: string
                                    type: array
                                  type: array
                                method:
                                  type: string
                              required:
                              - args
                              - method
                              type: object
                            type: array
                          product:
                            type: string
                          title:
                            type: string
                        required:
                        - title
                        type: object
                      type: array
                    title:
                      type: string
                  required:
                  - title
                  type: object
                type: array
              service:
                type: string
              title:
                type: string
            required:
            - API
            - deploymentRepo
            - envName
            - frontend
            - title
            type: object
          status:
            description: FrontendStatus defines the observed state of Frontend
            properties:
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
